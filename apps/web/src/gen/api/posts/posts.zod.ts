/**
 * Generated by orval v7.9.0 üç∫
 * Do not edit manually.
 * API
 * OpenAPI spec version: 1.0.0
 */
import {
  z as zod
} from 'zod';


export const getPostsIdParams = zod.object({
  "id": zod.string().uuid()
})

export const getPostsIdResponse = zod.object({
  "post": zod.object({
  "id": zod.string().uuid(),
  "content": zod.string(),
  "createdAt": zod.string().datetime({}),
  "updatedAt": zod.string().datetime({})
})
})

export const putPostsIdParams = zod.object({
  "id": zod.string().uuid()
})

export const putPostsIdBody = zod.object({
  "content": zod.string()
})

export const putPostsIdResponse = zod.object({
  "message": zod.enum(['success'])
})

export const deletePostsIdParams = zod.object({
  "id": zod.string().uuid()
})

export const deletePostsIdResponse = zod.object({
  "message": zod.enum(['success'])
})

export const getPostsQueryParams = zod.object({
  "limit": zod.string().min(1),
  "page": zod.string().min(1)
})

export const getPostsResponse = zod.object({
  "posts": zod.array(zod.object({
  "id": zod.string().uuid(),
  "content": zod.string(),
  "createdAt": zod.string().datetime({}),
  "updatedAt": zod.string().datetime({})
}))
})

export const postPostsBody = zod.object({
  "content": zod.string()
})

export const postPostsResponse = zod.object({
  "message": zod.enum(['success'])
})

